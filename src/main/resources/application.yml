spring:
  profiles:
    active: local
---
server:
  port: 0

logging:
  level:
    yongs:
      temp: DEBUG
    com:
      netflix:
        eureka: OFF
        discovery: OFF
      
spring:
  config:
    activate:
      on-profile: local
  application:
    name: example-user
  datasource:
    url: jdbc:mariadb://localhost:3306/example
    driverClassName: org.mariadb.jdbc.Driver
    username: scott
    password: tiger
    hikari:
      connection-timeout: 10000
      maximum-pool-size: 5

mybatis:
  configuration:
    multiple-result-sets-enabled: false
    map-underscore-to-camel-case: true
    call-setters-on-nulls: true    
    jdbc-type-for-null: varchar
    default-fetch-size: 500
  mapper-locations:
  - classpath:mybatis/mapper/*.xml
      
eureka:
  instance:
    preferIpAddress: true
    hostname: localhost
    instanceId: ${spring.application.name}:${random.value}
  client:
    registerWithEureka: true
    fetchRegistry: true
    enabled: true
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:8761/eureka/
      
minio: 
  host: minio
  port: 9000
  
---
server:
  port: 8080

logging:
  level:
    yongs:
      temp: DEBUG
      
spring:
  config:
    activate:
      on-profile: container
  application:
    name: example-user
  datasource:
    url: jdbc:mariadb://maria:3306/example
    driverClassName: org.mariadb.jdbc.Driver
    username: scott
    password: tiger
    hikari:
      connection-timeout: 10000
      maximum-pool-size: 5

mybatis:
  configuration:
    multiple-result-sets-enabled: false
    map-underscore-to-camel-case: true
    call-setters-on-nulls: true    
    jdbc-type-for-null: varchar
    default-fetch-size: 500
  mapper-locations:
  - classpath:mybatis/mapper/*.xml
      
eureka:
  instance:
    preferIpAddress: true
    hostname: example-eureka
    instanceId: ${spring.application.name}:${random.value}
  client:
    registerWithEureka: true
    fetchRegistry: true
    enabled: true
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:8761/eureka/
      
minio: 
  host: minio
  port: 9000